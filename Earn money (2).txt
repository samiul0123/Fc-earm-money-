<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Watch & Earn Mini App</title>
  <script src="https://telegram.org/js/telegram-web-app.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body {
      background: linear-gradient(135deg, #1f1c2c, #928dab);
      color: #ffffff;
      font-family: 'Roboto', sans-serif;
      text-align: center;
      margin: 0;
      padding: 50px 20px;
    }

    h2 {
      color: #00ffe7;
      font-size: 28px;
      margin-bottom: 20px;
      text-shadow: 2px 2px 8px rgba(0,0,0,0.5);
    }

    #balance {
      font-size: 24px;
      font-weight: bold;
      color: #ffeb3b;
      text-shadow: 1px 1px 5px #000;
      margin-bottom: 30px;
    }

    button {
      background: linear-gradient(135deg, #00c3ff, #ffff1c);
      color: #000;
      border: none;
      padding: 15px 30px;
      font-size: 18px;
      border-radius: 15px;
      margin: 15px 0;
      cursor: pointer;
      box-shadow: 0 5px 15px rgba(0,0,0,0.3);
      transition: all 0.3s ease;
    }

    button:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 20px rgba(0,0,0,0.4);
    }

    #ad-box, #spin-box {
      background: rgba(255,255,255,0.1);
      border-radius: 20px;
      padding: 25px;
      margin: 30px auto;
      width: 90%;
      max-width: 400px;
      display: none;
      box-shadow: 0 8px 20px rgba(0,0,0,0.5);
      animation: fadeIn 0.5s ease-in-out;
    }

    #ad-box img {
      width: 100%;
      border-radius: 15px;
      margin-bottom: 15px;
      box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    }

    #spin-result {
      font-size: 22px;
      color: #00ffe7;
      font-weight: bold;
      margin: 15px 0;
      text-shadow: 1px 1px 6px #000;
    }

    @keyframes fadeIn {
      from {opacity: 0; transform: translateY(20px);}
      to {opacity: 1; transform: translateY(0);}
    }
  </style>
</head>
<body>
  <h2>ðŸ’° Watch & Earn Mini App</h2>
  <p id="balance">Balance: 0 coins</p>

  <button id="watchAd">ðŸŽ¬ Watch Ad (+5 Coins)</button>
  <button id="dailyReward">ðŸ“… Claim Daily Reward (+10 Coins)</button>
  <button id="spinWheel">ðŸŽ¡ Spin the Wheel (+0-20 Coins)</button>

  <!-- Ad Box -->
  <div id="ad-box">
    <p style="font-size:20px; font-weight:bold;">Sponsored Ad</p>
    <img src="https://via.placeholder.com/350x180.png?text=Your+Ad+Here" alt="Ad">
    <button id="closeAd">âœ… Done Watching</button>
  </div>

  <!-- Spin Wheel Box -->
  <div id="spin-box">
    <p>ðŸŽ¡ Spin Result:</p>
    <p id="spin-result"></p>
    <button id="closeSpin">âœ… Close</button>
  </div>

  <script>
    const tg = window.Telegram.WebApp;
    tg.expand();

    let balance = 0;
    let lastDaily = null;

    const balanceDisplay = document.getElementById("balance");
    const adBox = document.getElementById("ad-box");
    const watchAdBtn = document.getElementById("watchAd");
    const closeAdBtn = document.getElementById("closeAd");

    const dailyBtn = document.getElementById("dailyReward");
    const spinBtn = document.getElementById("spinWheel");
    const spinBox = document.getElementById("spin-box");
    const spinResult = document.getElementById("spin-result");
    const closeSpin = document.getElementById("closeSpin");

    function updateBalance() {
      balanceDisplay.innerText = "Balance: " + balance + " coins";
    }

    // Watch Ad
    watchAdBtn.addEventListener("click", () => {
      watchAdBtn.style.display = "none";
      adBox.style.display = "block";
    });

    closeAdBtn.addEventListener("click", () => {
      adBox.style.display = "none";
      watchAdBtn.style.display = "block";
      balance += 5;
      updateBalance();
      tg.showAlert("You earned 5 coins!");
    });

    // Daily Reward
    dailyBtn.addEventListener("click", () => {
      const today = new Date().toDateString();
      if (lastDaily !== today) {
        balance += 10;
        lastDaily = today;
        updateBalance();
        tg.showAlert("You claimed your daily 10 coins!");
      } else {
        tg.showAlert("Daily reward already claimed today!");
      }
    });

    // Spin the Wheel
    spinBtn.addEventListener("click", () => {
      spinBtn.style.display = "none";
      spinBox.style.display = "block";
      const earned = Math.floor(Math.random() * 21);
      balance += earned;
      spinResult.innerText = `You won ${earned} coins!`;
      updateBalance();
    });

    closeSpin.addEventListener("click", () => {
      spinBox.style.display = "none";
      spinBtn.style.display = "block";
    });

    updateBalance();
  </script>
</body>
</html>


<button id="withdraw">ðŸ’¸ Withdraw Coins</button>

<div id="withdraw-box" style="display:none; background: rgba(255,255,255,0.1); border-radius:20px; padding:25px; margin:30px auto; max-width:400px;">
  <p style="font-size:18px; font-weight:bold;">Withdraw Coins</p>
  <select id="payment-method" style="padding:10px; width:95%; margin:10px 0; border-radius:10px; border:none;">
    <option value="">Select Payment Method</option>
    <option value="Bkash">Bkash</option>
    <option value="Nagad">Nagad</option>
  </select>
  <input id="payment-number" type="text" placeholder="Enter your number" style="padding:10px; width:95%; margin:10px 0; border-radius:10px; border:none;">
  <button id="sendWithdraw">âœ… Request Withdraw</button>
</div>

<script>
const withdrawBtn = document.getElementById("withdraw");
const withdrawBox = document.getElementById("withdraw-box");
const sendWithdraw = document.getElementById("sendWithdraw");
const paymentMethod = document.getElementById("payment-method");
const paymentNumber = document.getElementById("payment-number");

withdrawBtn.addEventListener("click", () => {
  withdrawBox.style.display = "block";
});

sendWithdraw.addEventListener("click", () => {
  const method = paymentMethod.value;
  const number = paymentNumber.value.trim();
  if(!method){
    tg.showAlert("Please select a payment method!");
    return;
  }
  if(!number){
    tg.showAlert("Please enter your Bkash/Nagad number!");
    return;
  }
  if(balance < 50){
    tg.showAlert("You need at least 50 coins to withdraw!");
    return;
  }

  balance -= 50; // Deduct coins
  updateBalance();
  withdrawBox.style.display = "none";
  paymentMethod.value = "";
  paymentNumber.value = "";

  // Send request to bot
  tg.sendData(JSON.stringify({
    action: "withdraw",
    method: method,
    number: number,
    coins: 50
  }));

  tg.showAlert("Withdraw request sent! You will receive payment soon.");
});
</script>

